@model BookBridgeApp.Models.Book

@{
    ViewData["Title"] = "Update Book";
    var booksList = ViewBag.BooksList as List<BookBridgeApp.Models.Book>;
    @* var booksJson = System.Text.Json.JsonSerializer.Serialize(booksList); *@
    var booksJson = booksList != null ? System.Text.Json.JsonSerializer.Serialize(booksList) : "[]";

}

<main>
    <div class="container">
        <section class="section">
            <h1 class="section-title">Update Book</h1>
            <div class="card">
                <p>Select a book from your collection to update the details.</p>
            </div>
        </section>

        <section class="section">
            <div class="card">
                <form asp-action="Update" method="post">
                    <div class="form-group">
                        <label for="Id">Select Book to Update *</label>
                        <select id="Id" name="Id" class="form-control" required onchange="populateBookDetails()">
                            <option value="">Choose a book...</option>
                            @if (booksList != null)
{
                                @foreach (var b in booksList)
                                {
                                    <option value="@b.Id">@b.Title</option>
                                    @* <option value="@b.Id" @(b.Id == 1 ? "selected" : "")>@b.Title</option> *@
                                }
                            }
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="Title">Title *</label>
                        <input type="text" name="Title" class="form-control" required id="Title" />
                    </div>

                    <div class="form-group">
                        <label for="Author">Author *</label>
                        <input type="text" name="Author" class="form-control" required id="Author" />
                    </div>

                    <div class="form-group">
                        <label for="Genre">Genre *</label>
                        <input type="text" name="Genre" class="form-control" required id="Genre" />
                    </div>

                    <div class="form-group">
                        <label for="Condition">Condition *</label>
                        <input type="text" name="Condition" class="form-control" required id="Condition" />
                        
                    </div>

                    <div class="form-group">
                        <label for="Description">Description</label>
                        <textarea name="Description" class="form-control" rows="4" id="Description"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="UserName">UserName *</label>
                        <input type="text" name="UserName" class="form-control" required id="UserName" />
                    </div>

                    <div class="form-group">
                        <label for="Phone">Phone *</label>
                        <input type="text" name="Phone" class="form-control" required id="Phone" />
                    </div>

                    <div class="form-group">
                        <label for="Location">Location *</label>
                        <input type="text" name="Location" class="form-control" required id="Location" />
                    </div>

                    

                    <div class="form-group">
                        <label for="Availability">Availability *</label>
                        <select name="Availability" class="form-control" required id="Availability">
                            <option value="">-- Select Availability --</option>
                            <option value="Available">Available</option>
                            <option value="Checked Out">Checked Out</option>
                        </select>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="btn btn-primary">Update Book</button>
                        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                    </div>
                </form>
            </div>
        </section>
    </div>
</main>


@section Scripts {
    <script>
        const books = @Html.Raw(booksJson);

        function populateBookDetails() {
            const selectedId = parseInt(document.getElementById("Id").value);
            const selectedBook = books.find(b => b.Id === selectedId); // Use 'Id' instead of 'id'

            if (selectedBook) {
                document.getElementById("Title").value = selectedBook.Title || "";
                document.getElementById("Author").value = selectedBook.Author || "";
                document.getElementById("Genre").value = selectedBook.Genre || "";
                document.getElementById("Condition").value = selectedBook.Condition || "";
                document.getElementById("Description").value = selectedBook.Description || "";
                document.getElementById("UserName").value = selectedBook.UserName || "";
                document.getElementById("Phone").value = selectedBook.Phone || "";
                document.getElementById("Location").value = selectedBook.Location || "";
                document.getElementById("Availability").value = selectedBook.Availability || "";
            } else {
                document.getElementById("Title").value = "";
                document.getElementById("Author").value = "";
                document.getElementById("Genre").value = "";
                document.getElementById("Condition").value = "";
                document.getElementById("Description").value = "";
                document.getElementById("UserName").value = "";
                document.getElementById("Phone").value = "";
                document.getElementById("Location").value = "";
                document.getElementById("Availability").value = "";
            }
        }
    window.onload = populateBookDetails;
    </script>
}
